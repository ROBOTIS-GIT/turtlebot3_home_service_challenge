<?xml version="1.0"?>
<launch>
  <arg name="address" default="127.0.0.1"/>
  <arg name="env_name" default="env.bash"/>
  <arg name="user_name" default="ubuntu"/>
  <arg name="password" default="turtlebot"/>
  
  <arg name="use_robot_name" default="tb3_hsc"/>
  <arg name="set_lidar_frame_id" default="base_scan"/>
  <arg name="use_filter" default="true"/>

  <arg name="camera_id" default="0"/>
  <arg name="camera_frame_id" default="$(arg use_robot_name)/camera_rgb_optical_frame"/>
  <arg name="camera_name" default="camerav2_1280x720"/>
 
  <!-- setting for machine -->
  <machine name="tb3" address="$(arg address)" env-loader="~/$(arg env_name)" user="$(arg user_name)" password="$(arg password)" />

  <group ns="$(arg use_robot_name)">
    <param name="robot_description"
      command="$(find xacro)/xacro --inorder '$(find turtlebot3_manipulation_description)/urdf/turtlebot3_manipulation_robot.urdf.xacro'"/>

    <!-- packages for turtlebot3 -->
    <node machine="tb3" pkg="rosserial_python" type="serial_node.py" name="turtlebot3_core" output="screen">
      <param name="port" value="/dev/ttyACM0"/>
      <param name="baud" value="115200"/>
      <param name="~tf_prefix" value="$(arg use_robot_name)"/>
    </node>
 
    <!-- lidar -->
    <node machine="tb3" pkg="hls_lfcd_lds_driver" type="hlds_laser_publisher" name="turtlebot3_lds" output="screen">
      <param name="port" value="/dev/ttyUSB0" />
      <param name="frame_id" value="$(arg use_robot_name)/$(arg set_lidar_frame_id)"/>
      <remap if="$(arg use_filter)" from="scan" to="scan_raw"/>
    </node>
    
    <!-- laserscan filter -->
    <group if="$(arg use_filter)">
      <node name="laser_scan_filter_node" pkg="turtlebot3_home_service_challenge_tools" type="laser_scan_filter_node" respawn="false" output="screen">
        <param name="input_topic" value="/$(arg use_robot_name)/scan_raw"/>
        <param name="output_topic" value="/$(arg use_robot_name)/scan"/>
        <param name="mean_k" value="4"/>
        <param name="std_dev_mul" value="2"/>
      </node>  
    </group>

    <node machine="tb3" pkg="turtlebot3_bringup" type="turtlebot3_diagnostics" name="turtlebot3_diagnostics" output="screen"/>
    
    <!-- tf -->
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
       <param name="publish_frequency" type="double" value="100.0" />
       <param name="prefix_tf_with" value="$(arg use_robot_name)/" />
    </node>

    <!-- start joint state publisher -->
    <node pkg="joint_state_publisher" type="joint_state_publisher" name="joint_state_publisher">
      <param name="/use_gui" value="false"/>
      <rosparam param="source_list">["/joint_states"]</rosparam>
    </node>  

    <!-- rpi camera -->
    <node machine="tb3" pkg="cv_camera" type="cv_camera_node" name="cv_camera" output="screen">

      <param name="camera_info_url" value="package://turtlebot3_home_service_challenge_tools/config/camera_info/camerav2_1280x720.yaml"/>
      <param name="image_width" value="320"/>
      <param name="image_height" value="240"/>
      <param name="rate" value="30"/>
      <param name="frame_id" value="/$(arg camera_frame_id)"/>    

      <remap from="/$(arg use_robot_name)/cv_camera/set_camera_info" to="/$(arg use_robot_name)/camera/set_camera_info" />
      <remap from="/$(arg use_robot_name)/cv_camera/camera_info" to="/$(arg use_robot_name)/camera/camera_info" />
      <remap from="/$(arg use_robot_name)/cv_camera/image_raw" to="/$(arg use_robot_name)/camera/image" />
    </node>

  </group>

</launch>
